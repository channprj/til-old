<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Today I Learned</title><link href="https://til.chann.kr/" rel="alternate"></link><link href="https://til.chann.kr/feeds/all.atom.xml" rel="self"></link><id>https://til.chann.kr/</id><updated>2016-03-11T14:00:00+09:00</updated><entry><title>파이썬 코딩 컨벤션</title><link href="https://til.chann.kr/python/python-coding-convention" rel="alternate"></link><updated>2016-03-11T14:00:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-03-11:python/python-coding-convention</id><summary type="html">&lt;!--Summary: --&gt;

&lt;p&gt;&lt;center&gt;&lt;img alt="Imgur" src="http://i.imgur.com/P58yvJI.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Coding_conventions"&gt;코딩 컨벤션(Coding convention)&lt;/a&gt;이란 읽고, 관리하기 쉬운 코드를 작성하기 위한 일종의 코딩 스타일 규약(약속)임.&lt;/p&gt;
&lt;p&gt;대부분의 언어는 대표적인 코딩 컨벤션을 가지고 있고, 일반적으로는 그러한 암묵적인 표준을 따르게 됨. 하지만 프로젝트별, 회사별, 기타 단체마다 각자 다른 규칙을 가짐. 단체에서는 아무리 작은 프로젝트라 하더라도 유지 보수 및 추가 개발 등의 관리를 해야 하기 때문에 코딩 스타일 규약은 반드시 필요.&lt;/p&gt;
&lt;p&gt;완벽한 코딩 컨벤션은 없음. 효율성이나 편의성이 확실히 증명되어 채택된 방식이 있을 수도 있지만 대개 취향의 차이임. 그러나 각 언어별 '존잘'~~(존나 잘하는)~~ 분들이 계신데, 대체로 그 분들의 영향력이 많이 끼침. 취향의 차이라서 그런지 서로 많이들 싸우기도 하는데, 대표적인 예로는 아래와 같음.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;인덴트 2칸 vs 4칸 vs 8칸(...소수)&lt;/li&gt;
&lt;li&gt;인덴트 Tab vs Space&lt;/li&gt;
&lt;li&gt;괄호를 어떻게 열고 닫을 것이냐&lt;/li&gt;
&lt;li&gt;변수나 함수 등 이름짓는 법&lt;/li&gt;
&lt;li&gt;주석 다는 법&lt;/li&gt;
&lt;li&gt;camelCase vs PascalCase vs snake_case vs hgCase vs ...&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;사실 코딩 컨벤션은 취향이지만 종교와도 같은 것이어서 이렇다 할 정답이 없음. 프로그래머 10명 잡고 물어보면 다들 선호하는 코딩 스타일이 다름. 예를 들어 함수이름만 봐도 어떤 프로그래머는 private함수는 getNum() 이란식으로 작성하고 public 함수는 GetNum()이라고 작성하자고 하는 반면 다른 프로그래머는 get_num()과 GetNum()이라고 하자고도 할 것.&lt;/p&gt;
&lt;p&gt;단체에서는 일의 효율과 체계를 갖추기 위해 엄격하게 규칙을 정해놓고 프로그래머들에게 강요하지만, 이로 인해 스타일을 바꾸야 하는(개종해야하는) 사람들에게는 오히려 생산성 저하의 요소가 되기도 함.&lt;/p&gt;
&lt;p&gt;대표적인 코딩 컨벤션으로는 BSD, K&amp;amp;R, GNU 와 같은 것이 있는데 예시는 아래와 같음.&lt;/p&gt;
&lt;p&gt;BSD&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;K&amp;amp;R&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;GNU&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;statement&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;스크립트 언어들은 다른 고급 언어에 비해 유연한 문법 구조를 가지고 있어 좀 더 엄격한 코딩 스타일 규약이 필요. 코딩 컨벤션은 코딩 스탠다드, 코딩 스타일 가이드 등으로도 불림.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;어떤 규칙을 따라야 하나&lt;/h2&gt;
&lt;p&gt;개인적으로 제가 코딩 컨벤션을 정하는 방법은 아래와 같음.
~~... 회사에선 높은 사람이 시키는대로...~~&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;창시자가 시키는대로 하기&lt;/li&gt;
&lt;li&gt;존잘러 구글의 권장사항을 참고&lt;/li&gt;
&lt;li&gt;기타 존잘러의 의견을 참고&lt;/li&gt;
&lt;li&gt;커뮤니티와 통계를 참고&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;그럼 파이썬에서는&lt;/h3&gt;
&lt;p&gt;우선, 파이썬은 주로 스네이크 표기법을 따름. ~~(파이썬이 도마뱀이니 뱀 표기법을...)~~ 그리고 앞서 말씀드린 바와 같이 창시자, 존잘러 구글, 기타 존잘러, 커뮤니티와 통계 순으로 내용을 다룰 예정.&lt;/p&gt;
&lt;h4&gt;창시자의 권장사항&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;PEP 8 is pretty much "the root" of all common style guides.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PEP 8은 파이썬에서 광영높으신 최고존엄 &lt;strong&gt;귀도 반 로썸&lt;/strong&gt; 형님이 작성하신 PEP(Python Enhance Proposal)에 작성하신 권장사항. PEP란 파이썬을 개선하기 위한 개선 제안서를 뜻하는 것으로 3가지로 구분됩니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Standard Track : 파이썬의 새로운 기능이나 구현을 제안&lt;/li&gt;
&lt;li&gt;Informational : 파이썬의 디자인 이슈나 일반적인 지침을 제안&lt;/li&gt;
&lt;li&gt;Process : 파이썬 커뮤니티에 정보를 제안&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이들 PEP 제안 중에서 PEP8은 파이썬 코딩 스타일 가이드라인을 의미하며 파이썬 커뮤니티에 정보를 제안하는 Process에 해당함. 이러한 PEP8(파이썬 코딩 스타일 가이드라인)의 대표적인 사항을 요약하면 아래와 같음.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;들여쓰기는 공백 4개&lt;/li&gt;
&lt;li&gt;한 줄의 최대 글자는 79자&lt;/li&gt;
&lt;li&gt;파일은 UTF-8 또는 ASCII로 인코딩&lt;/li&gt;
&lt;li&gt;하나의 import에는 모듈 하나만 하기&lt;/li&gt;
&lt;li&gt;import는 표준 라이브러리, 서드파티, 로컬 라이브러리 순서로 묶기&lt;/li&gt;
&lt;li&gt;소괄호 안, 중괄호 안, 대괄호 안, 쉼표, 콜론과 세미콜론 앞에 추가로 공백을 입력하지 말기&lt;/li&gt;
&lt;li&gt;키워드 인자와 인자의 기본값(default parameter value)의 = 는 붙여 쓰기&lt;/li&gt;
&lt;li&gt;불필요한 주석은 달지 말기, 한 줄 주석은 신중하게 달기&lt;/li&gt;
&lt;li&gt;불린형(boolean)의 값을 조건문에서 ==를 통해 비교하지 말기&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;파이썬의 대표적이고 기본적인 가이드라인이니만큼 규칙만 빽빽할 것 같지만, PEP 8는 서두부터 예외를 언급한 섹션이 있음.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Foolish Consistency is the Hobgoblin of Little Minds. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;멍청하게 일관성을 유지하는 것은 소인배(홉 고블린...)의 발상.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A style guide is about consistency. Consistency with this style guide is important. Consistency within a project is more important. Consistency within one module or function is most important.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;스타일 가이드는 일관성(consistency)에 관한 것. 이 스타일 가이드의 일관성은 중요. 하지만 프로젝트의 일관성은 더욱 중요하며, 하나의 모듈이나 함수의 일관성은 더더욱 중요함.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But most importantly: know when to be inconsistent – sometimes the style guide just doesn’t apply. When in doubt, use your best judgment. Look at other examples and decide what looks best. And don’t hesitate to ask!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;하지만 가장 중요한 건 언제 이것을 어길지 아는 것. – 때때로 스타일 가이드는 적용되지 않음. 의심이 들 때는 여러분의 최선의 판단을 따라야. 다른 예제를 보고 어느 게 제일 나은지 고르기. 그릭호 언제든 질문하기!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Two good reasons to break a particular rule:&lt;/p&gt;
&lt;p&gt;When applying the rule would make the code less readable, even for someone who is used to reading code that follows the rules.
To be consistent with surrounding code that also breaks it (maybe for historic reasons) – although this is also an opportunity to clean up someone else’s mess (in true XP style).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;다음은 규칙들을 어기는 2가지 좋은 예외 사항.&lt;/p&gt;
&lt;p&gt;규칙을 적용한 코드가 (규칙을 숙지한 사람 눈에도) 읽기 어려운 경우.
일관성을 지키려고 한 수정이 다른 규칙을 어기는 경우(아마도 역사적인 이유).&lt;/p&gt;
&lt;p&gt;기타 자세한 세부규칙은 아래의 참고 링크에서 확인 가능. 영어가 살짝 귀찮으시다면 &lt;a href="http://kenial.tistory.com/902"&gt;번역된 버전&lt;/a&gt;도 있음. &lt;a href="http://spoqa.github.io/2012/08/03/about-python-coding-convention.html"&gt;번역 및 요약된 버전&lt;/a&gt;도 있으니 참고.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;구글의 권장사항&lt;/h4&gt;
&lt;p&gt;최고존엄 귀도 반 로썸 형님이 구글에 계시므로, PEP8과 구글의 스타일 가이드가 크게 다르진 않은데, &lt;a href="https://github.com/google/yapf/blob/master/yapf/yapflib/style.py#L119"&gt;이러한 식&lt;/a&gt;으로 조금 다름. &lt;/p&gt;
&lt;p&gt;idiosyncratic (the two-space indents instead of the popular four-space ones, and the CamelCase style for functions and methods instead of the camel_case style, are pretty major idiosyncrasies).&lt;/p&gt;
&lt;p&gt;이것 역시 자세한 건 직접 확인을 해야.&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;커뮤니티와 통계&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://sideeffect.kr/popularconvention#python"&gt;2014-07-19 통계&lt;/a&gt;를 요약하자면 아래와 같음.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;스페이스 4칸 사용 : 94.86%&lt;/li&gt;
&lt;li&gt;줄 길이가 80자 이내 : 93.05%&lt;/li&gt;
&lt;li&gt;import를 다른 라인에 명시 : 96.06%&lt;/li&gt;
&lt;li&gt;괄호에 추가적인 빈칸 사용하지 않기 : 79.83%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다수가 사용하는 방식을 채택하는 것 또한 나쁘지 않다고 봄. 협업하는 데엔 도움이 많이 될 것.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://legacy.python.org/dev/peps/pep-0008/"&gt;PEP8 by Guido van Rossum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kenial.tistory.com/902"&gt;PEP8의 한글 번역&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://coreapython.hosting.paran.com/etc/CS%2011%20Python%20track%20coding%20style%20guide.htm"&gt;PEP8의 한글 번역 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://google.github.io/styleguide/pyguide.html"&gt;Google Python Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sideeffect.kr/popularconvention#python"&gt;Popular Coding Convention on Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://spoqa.github.io/2012/08/03/about-python-coding-convention.html"&gt;파이썬 코딩 컨벤션 - Spoqa 기술 블로그&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nuli.navercorp.com/sharing/fe/coding"&gt;NULI NAVER 코딩컨벤션&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hanul93.com/kicomav-pep8/"&gt;hanul93님 블로그&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.dahlia.kr/post/18035893350"&gt;홍민희님 블로그&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gamedevforever.com/116"&gt;포프님 블로그&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.google.com/p/soc/wiki/PythonStyleGuide"&gt;melange 스타일 가이드&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="python"></category><category term="programming"></category><category term="dev"></category><category term="scrpit"></category><category term="function"></category><category term="study"></category><category term="coding style"></category><category term="coding convension"></category><category term="coding standard"></category></entry><entry><title>Pelican 문서 작성법</title><link href="https://til.chann.kr/pelican/how-to-write-pelican-docs" rel="alternate"></link><updated>2016-02-27T18:00:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-02-27:pelican/how-to-write-pelican-docs</id><summary type="html">&lt;!--Summary: --&gt;

&lt;p&gt;개인적으로 &lt;code&gt;.rst&lt;/code&gt; &lt;a href="https://en.wikipedia.org/wiki/ReStructuredText"&gt;(reStructuredText)&lt;/a&gt; 방식의 문서를 선호하지 않으므로, 이 글에서는 &lt;code&gt;.md&lt;/code&gt; &lt;a href="https://nolboo.github.io/blog/2013/09/07/john-gruber-markdown/"&gt;(Markdown)&lt;/a&gt; 방식의 문서를 작성하는 법을 다룰 예정.&lt;/p&gt;
&lt;h2&gt;기본 틀&lt;/h2&gt;
&lt;p&gt;양식의 기본적인 틀은 아래와 같다. Slug나 Summary 와 같이 없어도 그만인 것들은 생략 가능. Slug는 문서의 URL을 생성하는 것인데, 가급적 영어로 적는 것을 추천. 한글로 적으면 자동으로 한글리쉬(...) 같은 형태로 바꿔버리기 때문. 예를들어, &lt;code&gt;한글로 적지마요&lt;/code&gt; 를 Slug로 하면 &lt;code&gt;hangeulro-jeokjimayo&lt;/code&gt; 같은 형태로 문서가 발행됨.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;문서&lt;/span&gt; &lt;span class="err"&gt;제목&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;펠리칸&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;펠리칸&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;문서&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CHANN&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;펠리칸&lt;/span&gt; &lt;span class="err"&gt;문서를&lt;/span&gt; &lt;span class="err"&gt;작성하는&lt;/span&gt; &lt;span class="err"&gt;법을&lt;/span&gt; &lt;span class="err"&gt;다룹니다&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="err"&gt;마크다운이&lt;/span&gt; &lt;span class="err"&gt;좋아요&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="err"&gt;여기다&lt;/span&gt; &lt;span class="err"&gt;본문을&lt;/span&gt; &lt;span class="err"&gt;작성하면&lt;/span&gt; &lt;span class="err"&gt;됩니다&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;확장기능&lt;/h2&gt;
&lt;p&gt;Pelican 은 &lt;a href="http://pythonhosted.org/Markdown/extensions/"&gt;Markdown Extension&lt;/a&gt;을 비롯한 다양한 &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;Plugin&lt;/a&gt;들을 제공함. 여러모로 쓸만한 플러그인을 대충 뽑아보자면 다음과 같음.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Related Post&lt;/li&gt;
&lt;li&gt;Category Order&lt;/li&gt;
&lt;li&gt;CJK auto spacing&lt;/li&gt;
&lt;li&gt;GitHub activity&lt;/li&gt;
&lt;li&gt;Interlinks&lt;/li&gt;
&lt;li&gt;Pelican Page Order&lt;/li&gt;
&lt;li&gt;Share post&lt;/li&gt;
&lt;li&gt;Sitemap&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;Github Pages 에서 404 페이지 작성&lt;/h2&gt;
&lt;p&gt;아래와 같이 작성하면 됨. &lt;em&gt;Status&lt;/em&gt; 를 &lt;em&gt;hidden&lt;/em&gt; 으로 하면 목록에 뜨지 않음. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Not&lt;/span&gt; &lt;span class="n"&gt;Found&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;
&lt;span class="n"&gt;Save_as&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;html&lt;/span&gt;
&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hidden&lt;/span&gt;

&lt;span class="err"&gt;글을&lt;/span&gt; &lt;span class="err"&gt;찾을&lt;/span&gt; &lt;span class="err"&gt;수&lt;/span&gt; &lt;span class="err"&gt;없습니다&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="err"&gt;검색&lt;/span&gt;&lt;span class="o"&gt;](/&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;하시거나&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="err"&gt;아카이브&lt;/span&gt;&lt;span class="o"&gt;](/&lt;/span&gt;&lt;span class="n"&gt;archives&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="err"&gt;를&lt;/span&gt; &lt;span class="err"&gt;확인해주세요&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;단점&lt;/h2&gt;
&lt;p&gt;글이 이미지 추가 시 마크다운 문법에 맞추어 따로 상대경로를 입력해줘야하는게 귀찮음. 글 수정 시 수정시간을 적어줘야 하는데, 수정시간을 수정하는 걸 깜박하거나 귀찮아서 방치하게 됨.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;추가사항&lt;/h2&gt;
&lt;p&gt;다국어지원도 되고 연관된 컨텐츠 보여주기 기능도 있는데, 기타 자세한 점은 &lt;a href="http://docs.getpelican.com/en"&gt;Pelican Documentation&lt;/a&gt;을 직접 확인하도록 하자. 공개된 Plugin을 찾아보면 입맛에 맞게 커스터미이징 할 수 있음.&lt;/p&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en"&gt;Pelican Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nolboo.github.io/blog/2013/09/07/john-gruber-markdown/"&gt;존 그루버 마크다운 페이지 번역&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/ReStructuredText"&gt;rst Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="python"></category><category term="pelican"></category><category term="static site generator"></category><category term="파이썬"></category><category term="펠리칸"></category><category term="정적 페이지 생성기"></category><category term="블로그"></category><category term="blog"></category><category term="github pages"></category><category term="markdown"></category><category term="마크다운"></category><category term="writing"></category><category term="글쓰기"></category></entry><entry><title>파이썬 기본 함수들</title><link href="https://til.chann.kr/python/python-base-function" rel="alternate"></link><updated>2016-02-27T18:00:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-02-27:python/python-base-function</id><summary type="html">&lt;!--Summary: --&gt;

&lt;h2&gt;입출력&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;작성중&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://codecademy.com"&gt;Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wikidocs.net"&gt;Wikidocs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="python"></category><category term="programming"></category><category term="dev"></category><category term="scrpit"></category><category term="function"></category><category term="파이썬"></category><category term="프로그래밍"></category><category term="개발"></category><category term="스크립트"></category><category term="함수"></category><category term="공부"></category><category term="스터디"></category><category term="study"></category></entry><entry><title>서버 재부팅 시 서비스 자동 실행 쉘스크립트</title><link href="https://til.chann.kr/shell/upstart-service-shell-script" rel="alternate"></link><updated>2016-02-16T22:00:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-02-16:shell/upstart-service-shell-script</id><summary type="html">&lt;!--Summary: --&gt;

&lt;blockquote&gt;
&lt;p&gt;Ubuntu Linux 기준으로 작성함.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;init 파일 생성&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;/etc/init.d&lt;/code&gt; 에 example 생성 후 아래와 같이 설정하자.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;chmod &lt;span class="m"&gt;755&lt;/span&gt; example
&lt;span class="nv"&gt;$ &lt;/span&gt;chown root:root example
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;쉘 스크립트&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;example&lt;/code&gt; 의 코드는 아래와 같이 작성 가능하다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="c"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="c"&gt;# Provides: blog&lt;/span&gt;
&lt;span class="c"&gt;# Required-Start:&lt;/span&gt;
&lt;span class="c"&gt;# Required-Stop:&lt;/span&gt;
&lt;span class="c"&gt;# Default-Start: 2 3 4 5&lt;/span&gt;
&lt;span class="c"&gt;# Default-Stop: 0 1 6&lt;/span&gt;
&lt;span class="c"&gt;### END INIT INFO&lt;/span&gt;

&lt;span class="nv"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;service&amp;quot;&lt;/span&gt;    

stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  &lt;span class="c"&gt;# -c 옵션은 해당 USER로 실행함을 의미.&lt;/span&gt;
    sudo su - &lt;span class="nv"&gt;$USER&lt;/span&gt; -c &lt;span class="s2"&gt;&amp;quot;# something to stop&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    sudo su - &lt;span class="nv"&gt;$USER&lt;/span&gt; -c &lt;span class="s2"&gt;&amp;quot;# something to start&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in  
    start&lt;span class="o"&gt;)&lt;/span&gt;
        start
        &lt;span class="p"&gt;;;&lt;/span&gt;
    stop&lt;span class="o"&gt;)&lt;/span&gt;
        stop
        &lt;span class="p"&gt;;;&lt;/span&gt;
    restart&lt;span class="o"&gt;)&lt;/span&gt; 
        stop
        start
        &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="c"&gt;# 필요할 경우 reload 등의 옵션을 추가적으로 구현.&lt;/span&gt;
    *&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|restart}&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;위의 주석처리 된 부분에서 &lt;code&gt;runlevel&lt;/code&gt;을 2, 3, 4, 5라고 명시한 것(Default-Start)은 싱글유저 모드 이외엔 자동 시작하겠다는 의미이다. 위의 스크립트는 굉장히 간단하니 기타 응용 방법은 &lt;code&gt;/etc/init.d/&lt;/code&gt; 의 다른 스크립트들을 보고 참고하자.&lt;/p&gt;
&lt;h2&gt;심볼릭 링크 추가&lt;/h2&gt;
&lt;p&gt;쉘스크립트 작성이 끝났으면 아래와 같이 심볼릭 링크를 추가해주자. rc는 다목적 시동 스크립트를 의미한다. upstart init은 우분투 6.10 때부터 도입되었다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;update-rc.d ghost defaults
&lt;span class="nv"&gt;$ &lt;/span&gt;update-rc.d ghost &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;</summary><category term="shell"></category><category term="terminal"></category><category term="cli"></category><category term="sh"></category><category term="init"></category><category term="init.d"></category><category term="ubuntu"></category><category term="upstart"></category></entry><entry><title>S65-01 JS, Canvas, SVG</title><link href="https://til.chann.kr/study/s65-js-study" rel="alternate"></link><updated>2016-02-11T22:32:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-02-11:study/s65-js-study</id><summary type="html">&lt;!--Summary: --&gt;

&lt;!-- 첫 번째 출석 8865 --&gt;

&lt;ul&gt;
&lt;li&gt;트렌디한 프레임워크나 라이브러리, 최신기술보다는 원론적인 내용을 다룰것&lt;/li&gt;
&lt;li&gt;개발자로서 오래 살아남기 위해서는 기초 및 핵심기술이 중요&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Graphic System&lt;/h2&gt;
&lt;p&gt;디지털 환경에서는 픽셀(점)으로 그래픽을 표현함. 모든 컴퓨터 그래픽 시스템의 기초는 비트맵 시스템임.&lt;/p&gt;
&lt;p&gt;점을 하나하나 찍기보다는 계산에 의해 색을 채울 방법을 고민하기 시작함.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Layer 0 - Fixed Number : 확정되고 고정된 수치
--&amp;gt; Fixed Number로 반응형 환경에 대응하기 힘들었음.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Layer 0과 1 사이의 애매함 : Drawing API, Shader, Filter, FontRenderer)
--&amp;gt; 보통 Layer 0을 감싸고 있는 기저레이어에서 제공&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Layer 1 - Caculator Hint : 상대적인 수치
ScreenSize, ChromeSize, Foreground, Layout System, LazyDetect, Reflow, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Canvas API --&amp;gt; Apple의 Dashboard API 기반.
Dashboard, Android Widget 등에서 쓰이는 Canvas API도 위와 거의 동일.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Layer 2 - Components
추상화로 미리 구현된 요소(element)들. (div, input, textarea, img, a, ...)
요소 &amp;lt; 노드&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;Hello World!&lt;/div&gt;

&lt;p&gt;--&amp;gt; Static Rendering&lt;/p&gt;
&lt;p&gt;Model(Data) - View(Layout)
기억하고 보여주고 싶은 데이터만을 추린 것이 모델.
Runtime Rendering&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Layer 3 - Frameworks&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;SVG (Scalable Vector Graphics)&lt;/h2&gt;
&lt;p&gt;2D 그래픽을 표현하기 위해 XML로 정의된 마크업 언어.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vector Shape&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;Text&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Group, Style, Transform 가능.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Embedding&lt;/li&gt;
&lt;li&gt;Scripting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SVG의 선, 도형 하나한가 DOM 엘리먼트로 동작하여 이벤트를 걸 수 있음.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;SVG(VML) vs Canvas&lt;/h3&gt;
&lt;p&gt;DOM은 구조적으로 복잡하여 로딩 속도가 느려질 수 밖에 없음.
Canvas는 단일 엘리먼트라 상대적으로 속도가 빠를 수 밖에 없음.&lt;/p&gt;
&lt;h3&gt;Tools, Library for SVG&lt;/h3&gt;
&lt;h4&gt;Tools&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Adobe Illustrator&lt;/li&gt;
&lt;li&gt;CorelDRAW&lt;/li&gt;
&lt;li&gt;Libre Office Draw, Open Office Draw (무료)&lt;/li&gt;
&lt;li&gt;Inkscape (무료)&lt;/li&gt;
&lt;li&gt;etc...&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Libraries&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;D3.js&lt;/li&gt;
&lt;li&gt;raphaelJS&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;SVG as a markup&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img src="#" /&amp;gt;&lt;/code&gt; ...&lt;/p&gt;</summary><category term="study"></category><category term="programming"></category><category term="dev"></category><category term="js"></category><category term="javascript"></category><category term="canvas"></category><category term="svg"></category><category term="자바스크립트"></category><category term="ECMAScript"></category><category term="ES6"></category></entry><entry><title>파이썬 함수</title><link href="https://til.chann.kr/python/python-function" rel="alternate"></link><updated>2016-02-08T13:00:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-02-08:python/python-function</id><summary type="html">&lt;!--Summary: --&gt;

&lt;h2&gt;파이썬 함수 개념&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;Test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;파이썬에서는 함수도 객체. &lt;code&gt;def&lt;/code&gt; 는 함수를 만드는 구문. Test 라는 이름은 생성된 함수 객체를 참조하는 레퍼런스. 메모리 어딘가에 함수 객체가 생성되는 것이고, 객체이기 때문에 생성할 때마다 다른 주소값을 가짐.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;return&lt;/code&gt;에서는 함수를 종료하고, 해당 함수를 호출한 곳으로 다시 되돌아감. 객체를 되돌려줌. &lt;code&gt;return&lt;/code&gt;을 적지 않아도, &lt;code&gt;return&lt;/code&gt;만 적어도 종료되며, 이때 반환값은 None.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;일반 구조&lt;/h3&gt;
&lt;p&gt;일반적인 파이썬 함수는 아래와 같이 생김.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="err"&gt;함수이름(변수1, 변수2, ...):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;조건&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c"&gt;# something...&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="err"&gt;반환값&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;return 을 붙이지 않아도 실행이 모두 끝나면 자동으로 &lt;code&gt;return&lt;/code&gt; 이 됨.
함수의 결과값 반환은 언제나 하나여야 하지만, 클래스 반환 등이 가능하므로 필요시 이러한 점을 응용하여 함수를 만들면 됨.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;입력받는 변수의 설정&lt;/h3&gt;
&lt;p&gt;입력 변수의 갯수가 변화할 때는 아래와 같음.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="err"&gt;함수이름(*변수):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; 
    &lt;span class="c"&gt;# something...&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="err"&gt;반환값&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;선택인자와 여러 개의 입력 변수를 통해 아래와 같이 활용 가능.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sum_mul&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;sum&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; 
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; 
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;mul&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; 
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;아래와 같이 함수에서 입력받는 변수의 초기값을 설정 가능. 단, 초기값을 부여할 변수는 항상 맨 뒤에 위치시켜야.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;true_or_false&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_true&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;isTrue&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="c"&gt;# something...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;true_or_false(1)&lt;/code&gt; 또는 &lt;code&gt;true_or_false(1, 0)&lt;/code&gt; 과 같은 형태로 함수를 사용할 수 있음.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;주의할 점&lt;/h3&gt;
&lt;p&gt;함수 안의 변수는 함수 안에서만 사용 가능. 함수 밖의 변수를 함수 안에서 불러서 변경시키고 싶으면 &lt;code&gt;global&lt;/code&gt; 키워드를 사용하면 되지만 각 함수는 독립적으로 존재하도록 짜는 것이 좋음. 예시는 아래의 코드 참조.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plus_one&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; 
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;  &lt;span class="c"&gt;# 권장 x&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;minus_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;minus_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# 권장 o&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;작성중&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://codecademy.com"&gt;Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wikidocs.net"&gt;Wikidocs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="python"></category><category term="programming"></category><category term="dev"></category><category term="scrpit"></category><category term="function"></category><category term="파이썬"></category><category term="프로그래밍"></category><category term="개발"></category><category term="스크립트"></category><category term="함수"></category><category term="공부"></category><category term="스터디"></category><category term="study"></category></entry><entry><title>자주 사용하는 vim 명령어 정리</title><link href="https://til.chann.kr/editor/vim-frequent-command" rel="alternate"></link><updated>2016-02-08T13:00:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-02-08:editor/vim-frequent-command</id><summary type="html">&lt;!--Summary: --&gt;

&lt;blockquote&gt;
&lt;p&gt;작성중&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;p&gt;1.&lt;a href="http://www.joinc.co.kr/modules/moniwiki/wiki.php/Site/Vim/Documents/UsedVim"&gt;Joinc Wiki&lt;/a&gt;
2. &lt;a href="https://blog.outsider.ne.kr/540"&gt;Outsider님 블로그&lt;/a&gt;
3. &lt;a href="http://hyeonstorage.tistory.com/274"&gt;하이언IT님 블로그&lt;/a&gt;&lt;/p&gt;</summary><category term="vim"></category><category term="editor"></category><category term="cli"></category><category term="빔"></category><category term="에디터"></category></entry><entry><title>리눅스 runlevel 정리</title><link href="https://til.chann.kr/linux/runlevel-summary" rel="alternate"></link><updated>2016-01-30T06:22:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-01-30:linux/runlevel-summary</id><summary type="html">&lt;!--Summary: --&gt;

&lt;h2&gt;runlevel 이란&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;runlevel&lt;/code&gt; 이란, 리눅스 시스템 관리의 용이함을 위하여 서비스의 실행을 단계별로 구분하여 적용하는 것을 말함. 보통 0 ~ 6 까지 총 7가지 모드가 있음. 리눅스마다 조금씩 다르지만 0(정지), 1(싱글모드), 6(재시작)은 일치함. 낮은 레벨일수록, 시스템 시작시 불러오는 드라이버나 데몬 수가 적음. &lt;code&gt;runlevel&lt;/code&gt; 은 높아지는 방향으로 진행되며, 부팅되면 0부터 시작함. &lt;code&gt;reboot&lt;/code&gt; 명령어를 실행하면 &lt;code&gt;runlevel&lt;/code&gt; 이 6이 됨.&lt;/p&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;0 - halt (DO NOT set initdefault to this)&lt;br/&gt;
시스템 종료를 의미. &lt;code&gt;runlevel&lt;/code&gt; 0으로 변경하라는 명령은 시스템을 종료하는 것.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 - Single user model&lt;br/&gt;
시스템 복원모드라고도 하며, 기본적으로 관리자 권한을 얻음. 주로, 파일시스템을 점검하거나 관리자 암호를 변경할 때 사용. 윈도우의 안전모드와 유사하다고 보면 됨.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2 - Multiuser mode, without NFS (The same as 3, if you do ot have networking)&lt;br/&gt;
NFS(Network File System)을 지원하지 않는 다중 사용자 모드. 네트워크를 사용하지 않음.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3 - Full muliuser mode&lt;br/&gt;
CLI(Command Line Interface) 다중 사용자 모드. 그래픽 유저 모드 지원안함.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4 - unused&lt;br/&gt;
임의로 정의해서 사용할 수 있는 레벨. 기본적으로는 사용하지 않음.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;5 - X11&lt;br/&gt;
level 3과 유사하나 그래픽 유저 모드를 지원.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;6 - reboot (DO NOT set initdefault to this)&lt;br/&gt;
시스템 재부팅을 의미. &lt;code&gt;runlevel&lt;/code&gt; 6으로 변경하라는 명령을 내리면 시스템을 재부팅.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;보통 0, 3, 6 을 많이 사용함. &lt;code&gt;runlevel&lt;/code&gt; 의 변경은 root 사용자의 경우만 가능.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;우분투&lt;/h3&gt;
&lt;p&gt;1(싱글유저), 2(GUI)가 특징.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0 - 정지&lt;/li&gt;
&lt;li&gt;1 - 싱글 유저&lt;/li&gt;
&lt;li&gt;2 - 그래픽, 멀티유저 + 네트워킹 (기본값)&lt;/li&gt;
&lt;li&gt;3 - 2와 같음 (사용안함)&lt;/li&gt;
&lt;li&gt;4 - 2와 같음 (사용안함)&lt;/li&gt;
&lt;li&gt;5 - 2와 같음 (사용안함)&lt;/li&gt;
&lt;li&gt;6 - 재시작&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;레드햇&lt;/h3&gt;
&lt;p&gt;1(싱글유저), 3(CLI), 5(GUI)가 특징.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0 - 정지&lt;/li&gt;
&lt;li&gt;1 - 싱글 유저&lt;/li&gt;
&lt;li&gt;2 - 미사용 (사용자 정의 가능)&lt;/li&gt;
&lt;li&gt;3 - 다중 사용자, 콘솔 로그인&lt;/li&gt;
&lt;li&gt;4 - 미사용 (사용자가 정의 가능)&lt;/li&gt;
&lt;li&gt;5 - &lt;code&gt;runlevel&lt;/code&gt; 3 + X11&lt;/li&gt;
&lt;li&gt;6 - 재시작&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;솔라리스&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;0: 정지&lt;/li&gt;
&lt;li&gt;S(s): 싱글 유저&lt;/li&gt;
&lt;li&gt;1: 관리&lt;/li&gt;
&lt;li&gt;2: 멀티유저&lt;/li&gt;
&lt;li&gt;3: 멀티유저(+NFS 자원 공유)&lt;/li&gt;
&lt;li&gt;4: 커스텀 멀티유저[1]&lt;/li&gt;
&lt;li&gt;5: 정지[2]&lt;/li&gt;
&lt;li&gt;6: 재시작[3]&lt;/li&gt;
&lt;/ul&gt;</summary><category term="linux"></category><category term="server"></category><category term="cli"></category><category term="runlevel"></category><category term="ubuntu"></category><category term="centos"></category><category term="redhat"></category><category term="fedora"></category></entry><entry><title>zsh에서 vim 명령어 자동완성 오류</title><link href="https://til.chann.kr/shell/ohmyzsh-autocomplete-bug-fix" rel="alternate"></link><updated>2016-01-25T21:12:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-01-25:shell/ohmyzsh-autocomplete-bug-fix</id><summary type="html">&lt;!--Summary: --&gt;

&lt;p&gt;갑자기 &lt;code&gt;vim&lt;/code&gt; 을 입력하고 tab을 누르니 &lt;code&gt;_arguments:450: _vim_files: function definition file not found&lt;/code&gt; 라는 오류메시지가 떴다. 구글링을 해 보니 홈 폴더에서 &lt;code&gt;.zcompdump*&lt;/code&gt; 파일을 지우면 대체로 잔버그가 해결된다는 답변&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;에 꽤나 힘이 실려있었는데, 이번 경우에는 좀처럼 통하지 않았다.  알고 보니 &lt;code&gt;exec zsh&lt;/code&gt; 해야 해결되었다. 아무 생각 없이 &lt;code&gt;source .zshrc&lt;/code&gt; 를 치고 '어... 왜 안 고쳐지지?' 헤맸던 내가 바보같다... dotfile 은 환경설정이거늘 ㅠㅠ&lt;/p&gt;
&lt;h2&gt;정리&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;rm ~/.zcompdump*
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;exec &lt;/span&gt;zsh
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;oh-my-zsh 버전이 올라갈 때마다 잔버그가 자주 나타나는 모양이다.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="zsh"></category><category term="shell"></category><category term="terminal"></category><category term="cli"></category><category term="sh"></category><category term="ohmyzsh"></category><category term="bug"></category><category term="fix"></category></entry><entry><title>프로그래밍 공부 사이트 정리</title><link href="https://til.chann.kr/study/programming-study-site-list" rel="alternate"></link><updated>2016-01-20T16:32:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-01-20:study/programming-study-site-list</id><summary type="html">&lt;!--Summary: --&gt;

&lt;h1&gt;&lt;a href="https://blog.chann.kr/link"&gt;https://blog.chann.kr/link&lt;/a&gt; 로 대체.&lt;/h1&gt;</summary><category term="study"></category><category term="programming"></category><category term="dev"></category><category term="favorite"></category></entry><entry><title>Git 한글 깨짐문제</title><link href="https://til.chann.kr/vcs/git-ko-path-name-fix" rel="alternate"></link><updated>2016-01-20T14:28:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-01-20:vcs/git-ko-path-name-fix</id><summary type="html">&lt;!--Summary: --&gt;

&lt;p&gt;인코딩 문제. 아래 한 줄이면 된다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config core.quotepath &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://kldp.org/node/132431"&gt;KLDP 글&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="vcs"></category><category term="git"></category><category term="i18n"></category><category term="github"></category><category term="terminal"></category><category term="cli"></category></entry><entry><title>Bower 사용법</title><link href="https://til.chann.kr/front-end/how-to-use-bower" rel="alternate"></link><updated>2016-01-15T20:12:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-01-15:front-end/how-to-use-bower</id><summary type="html">&lt;!--Summary: --&gt;

&lt;p&gt;&lt;a href="http://bower.io"&gt;Bower&lt;/a&gt; 는 웹을 위한 패키지 관리도구다. 트위터에서 개발하였고, 웹 개발시 자주 쓰이는 라이브러리를 쉽고 간편하게 관리할 수 있다. &lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;gem&lt;/code&gt; 과는 다르게 '웹 패키지 관리도구'라서 특정 언어의 종속성을 가지고 있지 않다. 개인적으로 느낀 장단점은 아래와 같다.&lt;/p&gt;
&lt;h2&gt;장점&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;패키지 설치 및 버전 관리, 의존성 관리 용이&lt;/li&gt;
&lt;li&gt;HTML, CSS, JS, Font, Image 파일 등의 최적화된 패키지&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;단점&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;패키지 설치장소 변경 불가, 패키지 디렉토리가 깔끔하지 않음.&lt;br /&gt;
(예시: ~/project/bower_components/bootstrap/dist/js)&lt;/li&gt;
&lt;li&gt;npm 에 의존적인 패키지 관리자. npm으로 bower를 설치 및 관리해야함.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;사용법&lt;/h2&gt;
&lt;h3&gt;Bower 설치&lt;/h3&gt;
&lt;p&gt;아래와 같이 설치한다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;npm install -g bower
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;패키지 설치&lt;/h3&gt;
&lt;p&gt;패키지 설치는 &lt;code&gt;npm&lt;/code&gt; 등 다른 패키지 관리도구와 비슷하다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;bower install bootstrap
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;패키지 검색&lt;/h3&gt;
&lt;p&gt;아래와 같다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;bower search bootstrap  &lt;span class="c"&gt;# bootstrap 패키지 전체 검색&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;bower lookup bootstrap  &lt;span class="c"&gt;# bootstrap과 일치하는 패키지만 찾기&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;bower info bootstrap  &lt;span class="c"&gt;# bootstrap의 버전 정보 확인&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;패키지 버전, 의존성 관리&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;node.js&lt;/code&gt; 에서는 &lt;code&gt;package.json&lt;/code&gt; 으로 관리하는데, bower에서도 비슷하게 &lt;code&gt;bower.json&lt;/code&gt; 으로 관리를 한다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;bower init  &lt;span class="c"&gt;# bower 패키지 정보를 저장&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;패키지 설치할 때, &lt;code&gt;--save&lt;/code&gt; 를 뒤에 붙여주면 설치하고 나서 &lt;code&gt;bower.json&lt;/code&gt;에 자동으로 기록해준다.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://bower.io"&gt;Bower 공식 홈페이지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bower/bower"&gt;Bower 저장소&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="dev"></category><category term="bower"></category><category term="package manager"></category><category term="tool"></category></entry><entry><title>파이썬 기초</title><link href="https://til.chann.kr/python/python-variable-operator" rel="alternate"></link><updated>2016-01-04T20:12:00+09:00</updated><author><name>CHANN</name></author><id>tag:til.chann.kr,2016-01-04:python/python-variable-operator</id><summary type="html">&lt;!--Summary: --&gt;

&lt;blockquote&gt;
&lt;p&gt;작성중&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;특징&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;인터프리터 언어&lt;/li&gt;
&lt;li&gt;가독성이 좋음&lt;/li&gt;
&lt;li&gt;접착성이 좋음(풀 언어(glue language)라고도 부름)&lt;/li&gt;
&lt;li&gt;무료&lt;/li&gt;
&lt;li&gt;방대한 오픈소스&lt;/li&gt;
&lt;li&gt;유니코드 기반&lt;/li&gt;
&lt;li&gt;동적 타이핑&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;2.x와 3.x의 차이&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;작성중&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;print 함수 형태 변경&lt;/li&gt;
&lt;li&gt;int 형으로 통일됨&lt;/li&gt;
&lt;li&gt;하지만 나누기 결과는 float&lt;/li&gt;
&lt;li&gt;3.x는 문자열 기본 인코딩이 유니코드&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2&gt;설치법&lt;/h2&gt;
&lt;h3&gt;윈도우&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.python.org/downloads/"&gt;파이썬 재단 홈페이지&lt;/a&gt; 참고.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;맥&lt;/h3&gt;
&lt;p&gt;맥에는 기본적으로 2.7.10이 내장되어 있다. 가급적 3.x 이상의 버전을 사용하라고 권고하고 있으니 따로 설치만 해주면 된다.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.python.org/downloads/"&gt;파이썬 재단 홈페이지&lt;/a&gt; 참고.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;리눅스&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt; 등 별도의 패키지 관리도구를 이용해서 설치하면 된다.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.python.org/downloads/"&gt;파이썬 재단 홈페이지&lt;/a&gt; 참고.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;변수명&lt;/h2&gt;
&lt;p&gt;변수명은 문자, 숫자, 언더바(_)를 포함 가능하지만 숫자가 먼저 올 수 없다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;python_var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;python_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;사전에 기능과 의미가 정의된 파이썬 키워드는 변수명으로 사용할 수 없다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;keyword&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kwlist&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;False&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;True&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;and&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;as&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;assert&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;break&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;continue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;def&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;del&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;elif&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;else&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;except&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;finally&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;for&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;from&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;global&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;if&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;import&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;in&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;is&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;lambda&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;nonlocal&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;not&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;or&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;raise&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;return&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;try&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;while&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;with&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;yield&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;문자열&lt;/h2&gt;
&lt;p&gt;반드시 큰따옴표("")나 작은따옴표('')로 감싸야 한다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;str&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;str&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;This is &amp;#39;str&amp;#39;&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# 여러 줄 입력일 경우&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;나는&lt;/span&gt;
&lt;span class="s"&gt;너의&lt;/span&gt;
&lt;span class="s"&gt;동반자&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;이스케이프 문자는 C와 유사하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\n&lt;/code&gt;  : 줄바꿈&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\t&lt;/code&gt;  : 탭&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\r&lt;/code&gt;  : 캐리지 반환&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\0&lt;/code&gt;  :  NULL&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\\&lt;/code&gt;  : '\'문자&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\'&lt;/code&gt;  : 따옴표 문자&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\"&lt;/code&gt;  : 쌍따옴표 문자&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;This is &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Escape character.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt;
&lt;span class="n"&gt;Escape&lt;/span&gt; &lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;문자열을 다루는 것도 쉽다. 잘라 쓰기 쉽고 붙이기는 더 쉽다. 자동으로 배열처럼 인덱싱도 된다. 인덱스를 이용하여 문자열의 특정 문자를 다른 문자로 변경할 수는 없으나 문자열 전체를 변경하는 것은 가능하다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;파이&amp;#39;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;썬&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;파이썬&amp;#39;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;파이&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;썬&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;파이썬&amp;#39;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;파이&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;파이파이파이&amp;#39;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;파이썬&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;썬&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# 0(시작)부터 2글자 슬라이싱&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;파이&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# 시작(0 생략)부터 3글자까지 슬라이싱&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;파이썬&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# 뒤에서부터 1글자만 슬라이싱&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;썬&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;리스트&lt;/h2&gt;
&lt;p&gt;파이썬에서의 리스트는 값의 나열이라 순서가 있으며 여러 종류의 값을 담을 수 있다. 인덱스는 0부터 시작하며 슬라이싱도 가능하다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 배열의 선언&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cheese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# 배열 출력&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cheese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# 배열의 타입 체크&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;list&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;# append() 함수로 리스트 뒤에 새 아이템 추가&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;chicken&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cheese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;chicken&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# insert() 함수로 리스트 중간에 새 아이템 추가&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cheese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;chicken&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# extend() 함수로 여러 아이템을 한번에 추가&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;cola&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cider&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cheese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;chicken&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cola&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cider&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# += 연산자로 리스트 붙이기&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;cake&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cheese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;chicken&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cola&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cider&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cake&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# 문자열을 붙일 경우 각 문자단위로 쪼개져서 붙음&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ice&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cheese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;chicken&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cola&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cider&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cake&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# index() 함수로 인덱스 번호 체크&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;

&lt;span class="c"&gt;## 인덱스 찾는 시작점 부여&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c"&gt;# 리스트 아이템 추가&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt;

&lt;span class="c"&gt;# count() 함수로 리스트 아이탬 갯수 체크&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;기본적으로 리스트 아이템을 삭제하는 건 크게 2가지 방법이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pop() : 뒤에서부터 값을 빼내옴.&lt;/li&gt;
&lt;li&gt;remove()  : 위치에 상관없이 리스트 아이템 삭제.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# pop() 함수는 리스트 맨 뒤 아이템을 출력 후 삭제&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# remove()는 위치에 관계없이 조용히 해당 리스트 아이템만 삭제&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 지우고자 하는 아이템이 없으면 오류메시지 출력&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;정렬방법은 아래와 같다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 순방향 정렬&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cake&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cheese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;chicken&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cider&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cola&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;rice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# 역순 정렬&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cola&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cider&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;chicken&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cheese&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cake&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;세트&lt;/h2&gt;
&lt;p&gt;수학에서의 집합과 동일. 데이터의 순서는 없음.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 변수 선언&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# 세트 확인&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# 타입 확인&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;set&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;# 합집합&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;union&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# 교집합&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;intersection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# 기타 집합 연산자&lt;/span&gt;
&lt;span class="c"&gt;## 차집합&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;

&lt;span class="c"&gt;## 합집합&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;

&lt;span class="c"&gt;## 교집합&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;튜플&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;작성중&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;리스트와는 다르게 ()로 묶어서 표현. 주로 읽기 전용으로 쓰이기 때문에 제공되는 함수는 적지만 그만큼 속도가 빠름.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;tuple&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 튜플을 이용한 Swap 응용. 임시 변수가 필요 없음.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 튜플 내부 값 확인&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# 리스트, 세트, 튜플은 list(), set(), tuple()의 함수를 이용해 서로 언제든지 변환 가능.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;사전&lt;/h2&gt;
&lt;p&gt;키와 값의 쌍으로 구성된 자료구조. 키와 값 이외의 인덱스는 지원하지 않음.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dictionary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dictionary&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# dict() 생성자 없이 생성 가능&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;small&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;m&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;medium&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;l&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;large&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;l&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;large&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# 사전의 내용은 items(), keys(), values() 함수로 받아옴&lt;/span&gt;
&lt;span class="c"&gt;## items()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;s&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;small&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;large&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;medium&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;small&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="n"&gt;large&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;medium&lt;/span&gt;

&lt;span class="c"&gt;## keys()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt;

&lt;span class="c"&gt;## values()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;small&lt;/span&gt;
&lt;span class="n"&gt;large&lt;/span&gt;
&lt;span class="n"&gt;medium&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;논리연산자&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; 1 &amp;gt; 2
False

&amp;gt;&amp;gt;&amp;gt; 1 != 2
True

&amp;gt;&amp;gt;&amp;gt; 1 == 1
True

&amp;gt;&amp;gt;&amp;gt; True &amp;amp; True
True

&amp;gt;&amp;gt;&amp;gt; True | False
True

&amp;gt;&amp;gt;&amp;gt; True or False
True

&amp;gt;&amp;gt;&amp;gt; not False
True

&amp;gt;&amp;gt;&amp;gt; bool(1)
True

&amp;gt;&amp;gt;&amp;gt; bool(&amp;quot;Good&amp;quot;)
True

&amp;gt;&amp;gt;&amp;gt; bool(None)
False
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;얕은 복사, 깊은 복사&lt;/h2&gt;
&lt;p&gt;모든 변수는 객체의 주소를 가짐. &lt;/p&gt;
&lt;h3&gt;얕은복사&lt;/h3&gt;
&lt;p&gt;아래 예시에서 &lt;code&gt;b = a&lt;/code&gt; 의 경우, a가 가리키는 객체의 주소를 b에 복사한 것. 이해가 안 된다면, &lt;code&gt;id()&lt;/code&gt; 함수를 사용하여 객체의 고유값을 확인해보자.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;copy()&lt;/code&gt; 함수를 사용하면 주소가 복사되어 객체를 공유하는 앝은 복사(shallow copy)가 됨. 일반적으로 생각하는 '참조'의 개념과 같음.&lt;/p&gt;
&lt;h3&gt;깊은복사&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;deepcopy()&lt;/code&gt; 함수를 사용하면 객체를 공유하지 않는 깊은 복사(deep copy)가 됨. 일반적으로 생각하는 '복사'의 개념과 같음.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;함수&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;Test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;파이썬에서는 함수도 객체다. &lt;code&gt;def&lt;/code&gt; 는 함수를 만드는 구문이다. Test 라는 이름은 생성된 함수 객체를 참조하는 레퍼런스다. 메모리 어딘가에 함수 객체가 생성되는 것이고, 객체이기 때문에 생성할 때마다 다른 주소값을 가진다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;return&lt;/code&gt;에서는 함수를 종료하고, 해당 함수를 호출한 곳으로 다시 되돌아간다. 객체를 되돌려준다. &lt;code&gt;return&lt;/code&gt;을 적지 않아도, &lt;code&gt;return&lt;/code&gt;만 적어도 종료되며, 이때 반환값은 None이다.&lt;/p&gt;</summary><category term="python"></category><category term="programming"></category><category term="dev"></category><category term="scrpit"></category></entry></feed>